package com.dev.wolf.exploit_db.core.network

import android.content.Context
import android.os.Build
import android.webkit.WebSettings
import com.dev.wolf.exploit_db.BuildConfig
import okhttp3.Interceptor
import okhttp3.Response
import java.util.*

class UserAgentInterceptor(private val context: Context) : Interceptor {

    override fun intercept(chain: Interceptor.Chain): Response {
        val request = chain.request()
        return chain.proceed(
            if (request.header(CommonHeaders.USER_AGENT) == null) {
                request.newBuilder()
                    .addHeader(CommonHeaders.USER_AGENT, getUA(context))
                    .build()
            } else request
        )
    }

    companion object {

        fun getUA(context: Context): String{
            return WebSettings.getDefaultUserAgent(context) ?: userAgent
        }
        val userAgent
            get() = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36 Edg/88.0.705.63"
    }
}