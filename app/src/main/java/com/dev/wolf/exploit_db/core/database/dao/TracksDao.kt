package com.dev.wolf.exploit_db.core.database.dao

import androidx.room.*
import com.dev.wolf.exploit_db.core.database.entity.TrackEntity
import java.util.*


@Dao
abstract class TracksDao {

    @Query("SELECT * FROM tracks")
    abstract suspend fun findAll(): List<TrackEntity>

    @Query("SELECT * FROM tracks WHERE exploit_id = :exploitID")
    abstract suspend fun find(exploitID: Long): TrackEntity?

    @Query("DELETE FROM tracks")
    abstract suspend fun clear()

    @Insert(onConflict = OnConflictStrategy.IGNORE)
    abstract suspend fun insert(entity: TrackEntity): Long

    @Update
    abstract suspend fun update(entity: TrackEntity): Int

    @Query("DELETE FROM tracks WHERE exploit_id = :exploitID")
    abstract suspend fun delete(exploitID: Long)

    @Query("DELETE FROM tracks WHERE created_at <> :date")
    abstract suspend fun cleanup(date: String)

    @Transaction
    open suspend fun upsert(entity: TrackEntity) {
        if (update(entity) == 0) {
            insert(entity)
        }
    }
}