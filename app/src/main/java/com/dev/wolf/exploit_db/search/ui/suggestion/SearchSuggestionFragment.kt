package com.dev.wolf.exploit_db.search.ui.suggestion

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.core.graphics.Insets
import androidx.core.view.updatePadding
import androidx.recyclerview.widget.ItemTouchHelper
import com.dev.wolf.exploit_db.base.BaseFragment
import com.dev.wolf.exploit_db.databinding.FragmentSearchSuggestionBinding
import com.dev.wolf.exploit_db.search.ui.suggestion.adapter.SearchSuggestionAdapter
import org.koin.androidx.viewmodel.ext.android.sharedViewModel

class SearchSuggestionFragment : BaseFragment<FragmentSearchSuggestionBinding>(),
    SearchSuggestionItemCallback.SuggestionItemListener {

    private val viewModel by sharedViewModel<SearchSuggestionViewModel>()

    override fun onInflateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
    ) = FragmentSearchSuggestionBinding.inflate(inflater, container, false)

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        val adapter = SearchSuggestionAdapter(
            listener = requireActivity() as SearchSuggestionListener,
        )
        binding.root.adapter = adapter
        viewModel.suggestion.observe(viewLifecycleOwner) {
            adapter.items = it
        }
        ItemTouchHelper(SearchSuggestionItemCallback(this))
            .attachToRecyclerView(binding.root)
    }

    override fun onWindowInsetsChanged(insets: Insets) {
        binding.root.updatePadding(
            left = insets.left,
            right = insets.right,
            bottom = insets.bottom,
        )
    }

    override fun onRemoveQuery(query: String) {
        viewModel.deleteQuery(query)
    }

    companion object {

        fun newInstance() = SearchSuggestionFragment()
    }
}