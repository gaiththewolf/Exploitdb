package com.dev.wolf.exploit_db.utils.ext

import android.content.res.Resources
import android.util.Log
import com.dev.wolf.exploit_db.R
import kotlinx.coroutines.delay
import java.io.FileNotFoundException
import java.net.SocketTimeoutException

fun Throwable.getDisplayMessage(resources: Resources) = when (this) {
    is UnsupportedOperationException -> resources.getString(R.string.operation_not_supported1)
    is FileNotFoundException -> resources.getString(R.string.file_not_found)
    is SocketTimeoutException -> resources.getString(R.string.network_error)
    else -> localizedMessage ?: resources.getString(R.string.error_occurred)
}

inline fun <T> measured(tag: String, block: () -> T): T {
    val time = System.currentTimeMillis()
    val res = block()
    val spent = System.currentTimeMillis() - time
    Log.d("measured", "$tag ${spent.format(1)} ms")
    return res
}