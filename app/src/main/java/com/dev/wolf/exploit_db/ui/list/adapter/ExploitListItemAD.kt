package com.dev.wolf.exploit_db.ui.list.adapter

import androidx.core.content.ContextCompat
import androidx.core.view.isVisible
import com.dev.wolf.exploit_db.R
import com.dev.wolf.exploit_db.base.list.OnListItemClickListener
import com.dev.wolf.exploit_db.core.model.Exploit
import com.dev.wolf.exploit_db.databinding.ItemExploitListBinding
import com.dev.wolf.exploit_db.ui.list.model.ExploitListModel
import com.dev.wolf.exploit_db.ui.list.model.ListModel
import com.dev.wolf.exploit_db.utils.ext.fromHTML
import com.dev.wolf.exploit_db.utils.ext.getPlatformDrawable
import com.dev.wolf.exploit_db.utils.ext.isToday
import com.hannesdorfmann.adapterdelegates4.dsl.adapterDelegateViewBinding

fun exploitListItemAD(
    clickListener: OnListItemClickListener<Exploit>
) = adapterDelegateViewBinding<ExploitListModel, ListModel, ItemExploitListBinding>(
    { inflater, parent -> ItemExploitListBinding.inflate(inflater, parent, false) }
) {

    itemView.setOnClickListener {
        clickListener.onItemClick(item.exploit, it)
    }

    bind {
        binding.textViewDate.text = item.date
        if (item.exploit.createdAt.isToday())
            binding.textViewDate.setTextColor(ContextCompat.getColor(context, R.color.red_accent))
        binding.textViewTitle.text = item.title.fromHTML()
        binding.textViewType.text = item.type
        binding.textViewPlatform.text = item.platform
        binding.textViewPlatform.setCompoundDrawablesWithIntrinsicBounds(
            item.exploit.platform?.key?.getPlatformDrawable() ?: R.drawable.ic_platform,
            0,0,0)
        binding.textViewAuthor.text = item.author
        if (item.isVerified)
            binding.imageViewVerified.setImageDrawable(
                ContextCompat.getDrawable(context, R.drawable.ic_verified))
        else
            binding.imageViewVerified.setImageDrawable(
                ContextCompat.getDrawable(context, R.drawable.ic_not_verified))

        if (item.isApplication) {
            binding.imageViewApplication.isVisible = true
            binding.imageViewApplication.setImageDrawable(
                ContextCompat.getDrawable(
                    context,
                    R.drawable.ic_package_down
                )
            )
        }
        else
            binding.imageViewApplication.isVisible = false
    }

}