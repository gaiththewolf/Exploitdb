package com.dev.wolf.exploit_db.search.ui.suggestion.adapter

import androidx.core.content.ContextCompat
import androidx.core.view.isVisible
import com.dev.wolf.exploit_db.R
import com.dev.wolf.exploit_db.databinding.ItemExploitListBinding
import com.dev.wolf.exploit_db.search.ui.suggestion.SearchSuggestionItem
import com.dev.wolf.exploit_db.search.ui.suggestion.SearchSuggestionListener
import com.dev.wolf.exploit_db.utils.ext.fromHTML
import com.dev.wolf.exploit_db.utils.ext.toLocalDate
import com.hannesdorfmann.adapterdelegates4.dsl.adapterDelegateViewBinding

fun searchSuggestionExploitAD(
    listener: SearchSuggestionListener,
) = adapterDelegateViewBinding<SearchSuggestionItem.ExploitItem, SearchSuggestionItem, ItemExploitListBinding>(
    { inflater, parent -> ItemExploitListBinding.inflate(inflater, parent, false) }
) {

    itemView.setOnClickListener {
        listener.onExploitClick(item.exploit)
    }

    bind {
        binding.textViewDate.text = item.exploit.createdAt.toLocalDate()
        binding.textViewTitle.text = item.exploit.title.fromHTML()
        binding.textViewType.text = item.exploit.type?.title
        binding.textViewPlatform.text = item.exploit.platform?.title
        binding.textViewAuthor.text = item.exploit.author
        if (item.exploit.isVerified)
            binding.imageViewVerified.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_verified))
        else
            binding.imageViewVerified.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_not_verified))

        if (item.exploit.isApplication.first)
            binding.imageViewApplication.setImageDrawable(ContextCompat.getDrawable(context, R.drawable.ic_package_down))
        else
            binding.imageViewApplication.isVisible = false
    }


}