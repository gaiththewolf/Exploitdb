package com.dev.wolf.exploit_db.settings

import android.content.Context
import android.media.RingtoneManager
import android.os.Bundle
import android.view.View
import androidx.preference.Preference
import com.dev.wolf.exploit_db.R
import com.dev.wolf.exploit_db.base.BasePreferenceFragment
import com.dev.wolf.exploit_db.core.prefs.AppSettings
import com.dev.wolf.exploit_db.utils.RingtonePickContract
import com.dev.wolf.exploit_db.utils.ext.toUriOrNull
import org.koin.android.ext.android.get

class NotificationSettingsLegacyFragment : BasePreferenceFragment(R.string.notifications) {

    private val ringtonePickContract = registerForActivityResult(
        RingtonePickContract(get<Context>().getString(R.string.notification_sound))
    ) { uri ->
        settings.notificationSound = uri?.toString() ?: return@registerForActivityResult
        findPreference<Preference>(AppSettings.KEY_NOTIFICATIONS_SOUND)?.run {
            summary = RingtoneManager.getRingtone(context, uri)?.getTitle(context)
                ?: getString(R.string.silent)
        }
    }

    override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?) {
        addPreferencesFromResource(R.xml.pref_notifications)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        findPreference<Preference>(AppSettings.KEY_NOTIFICATIONS_SOUND)?.run {
            val uri = settings.notificationSound.toUriOrNull()
            summary = RingtoneManager.getRingtone(context, uri)?.getTitle(context)
                ?: getString(R.string.silent)
        }
    }

    override fun onPreferenceTreeClick(preference: Preference?): Boolean {
        return when (preference?.key) {
            AppSettings.KEY_NOTIFICATIONS_SOUND -> {
                ringtonePickContract.launch(settings.notificationSound.toUriOrNull())
                true
            }
            else -> super.onPreferenceTreeClick(preference)
        }
    }
}