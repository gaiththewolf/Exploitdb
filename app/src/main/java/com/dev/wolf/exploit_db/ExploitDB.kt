package com.dev.wolf.exploit_db

import android.app.Application
import android.os.StrictMode
import androidx.appcompat.app.AppCompatDelegate
import com.dev.wolf.exploit_db.base.domain.LoaderContext
import com.dev.wolf.exploit_db.core.database.databaseModule
import com.dev.wolf.exploit_db.core.github.githubModule
import com.dev.wolf.exploit_db.core.network.networkModule
import com.dev.wolf.exploit_db.core.parser.parserModule
import org.koin.android.ext.android.get
import com.dev.wolf.exploit_db.core.prefs.AppSettings
import com.dev.wolf.exploit_db.core.ui.AppCrashHandler
import com.dev.wolf.exploit_db.search.searchModule
import com.dev.wolf.exploit_db.settings.settingsModule
import com.dev.wolf.exploit_db.tracker.trackerModule
import com.dev.wolf.exploit_db.ui.detail.detailsModule
import com.dev.wolf.exploit_db.ui.favourites.favouritesModule
import com.dev.wolf.exploit_db.ui.list.remoteListModule
import org.koin.android.ext.koin.androidContext
import org.koin.core.context.GlobalContext.startKoin

class ExploitDB : Application() {

    override fun onCreate() {
        super.onCreate()
        if (BuildConfig.DEBUG) {
            enableStrictMode()
        }
        initKoin()
        Thread.setDefaultUncaughtExceptionHandler(AppCrashHandler(applicationContext))
        AppCompatDelegate.setDefaultNightMode(get<AppSettings>().theme)
    }
    private fun initKoin() {
        startKoin {
            androidContext(this@ExploitDB)
            modules(
                networkModule,
                databaseModule,
                githubModule,
                parserModule,
                searchModule,
                favouritesModule,
                remoteListModule,
                detailsModule,
                trackerModule,
                settingsModule
            )
        }
    }
    private fun enableStrictMode() {
        StrictMode.setThreadPolicy(
            StrictMode.ThreadPolicy.Builder()
                .detectAll()
                .penaltyLog()
                .build()
        )
        StrictMode.setVmPolicy(
            StrictMode.VmPolicy.Builder()
                .detectAll()
                .setClassInstanceLimit(LoaderContext::class.java, 1)
                .penaltyLog()
                .build()
        )
    }
}