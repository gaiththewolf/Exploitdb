package com.dev.wolf.exploit_db.utils.ext

import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.map
import kotlinx.coroutines.flow.onEach

fun <T> Flow<T>.onFirst(action: suspend (T) -> Unit): Flow<T> {
    var isFirstCall = true
    return onEach {
        if (isFirstCall) {
            action(it)
            isFirstCall = false
        }
    }
}

inline fun <T, R> Flow<List<T>>.mapItems(crossinline transform: (T) -> R): Flow<List<R>> {
    return map { list -> list.map(transform) }
}