<resources>
    <string name="app_name">Exploit-db</string>
    <string name="report_github">Create issue on GitHub</string>
    <string name="close">Close</string>
    <string name="restart">Restart</string>
    <string name="share">Share</string>
    <string name="share_s">Share %s</string>
    <string name="error_occurred">An error has occurred</string>
    <string name="internal_storage">Internal storage</string>
    <string name="external_storage">External storage</string>
    <string name="not_available">Not available</string>
    <string name="cannot_find_available_storage">Cannot find any available storage</string>
    <string name="other_storage">Other storage</string>
    <string name="nothing_found">Nothing found</string>
    <string name="_empty" translatable="false" />
    <string name="try_again">Try again</string>
    <string name="operation_not_supported1">This operation is not supported</string>
    <string name="file_not_found">File not found</string>
    <string name="network_error">Network connection error</string>
    <string name="tap_to_try_again">Tap to try again</string>
    <string name="all">All</string>
    <string name="filter">Filter</string>
    <string name="type">Type</string>
    <string name="platform">Platform</string>
    <string name="port">Port</string>
    <string name="tag">Tag</string>
    <string name="text_search_holder_secondary">Try to reformulate the query.</string>
    <string name="search_exploit">Search Exploit</string>
    <string name="clear_search_history">Clear search history</string>
    <string name="search_history_cleared">Search history cleared</string>
    <string name="text_clear_search_history_prompt">Do you really want to remove all recent search queries? This action cannot be undone.</string>
    <string name="clear">Clear</string>
    <string name="search">Search</string>
    <string name="details">Details</string>
    <string name="code">Exploit Code</string>
    <string name="open_in_code_browser">Open code in browser</string>
    <string name="open_in_exploit_browser">Open exploit in browser</string>
    <string name="save">Save</string>
    <string name="exploit_code_title">Exploit code</string>
    <string name="exploit_code_title_s">Code : %s</string>

    <!-- Test Strings for CodeView -->
    <string name="listing_md" formatted="false" translatable="false">
        3. CodeView and related adapter.\n
        \n
        ## Download\n
        Add it in your root ```build.gradle``` at the end of repositories:\n
        ```groovy\n
        allprojects {\n
            repositories {\n
                ...\n
                maven { url \"https://jitpack.io\" }\n
            }\n
        }\n
        ```\n
        \n
        Add the dependency:
    </string>

    <string name="listing_java" formatted="false" translatable="false">
        package io.github.kbiakov.codeviewexample;\n
        \n
        import android.os.Bundle;\n
        import android.support.annotation.Nullable;\n
        import android.support.v4.content.ContextCompat;\n
        import android.support.v7.app.AppCompatActivity;\n
        \n
        import io.github.kbiakov.codeview.CodeView;\n
        import io.github.kbiakov.codeview.highlight.ColorTheme;\n
        \n
        public class ListingsActivity extends AppCompatActivity {\n
            \n
            @Override\n
            protected void onCreate(@Nullable Bundle savedInstanceState) {\n
                super.onCreate(savedInstanceState);\n
                setContentView(R.layout.activity_listings);\n
                \n
                int myColor = ContextCompat.getColor(this, R.color.code_content_background);\n
                \n
                CodeView codeView = (CodeView) findViewById(R.id.code_view);\n
                \n
                // use chaining to build view\n
                codeView.highlightCode(\"js\")\n
                        .setColorTheme(ColorTheme.SOLARIZED_LIGHT.withBgContent(myColor))\n
                        .setCodeContent(getString(R.string.listing_js));\n
                \n
                // do not use chaining for built view\n
                // (you can, but follow it should be performed sequentially)\n
                codeView.setCodeContent(getString(R.string.listing_java));\n
                codeView.highlightCode("java");\n
            }\n
        }
    </string>

    <string name="listing_py" formatted="false" translatable="false">
        from timeit import Timer\n
            \n
            tmp = \"Python 3.2.2 (default, Jun 12 2011, 15:08:59) [MSC v.1500 32 bit (Intel)] on win32.\"\n
            \n
            def case1(): # A. Incremental concatenations in cycle\n
            s = \"\"\n
            for i in range(10000):\n
            s += tmp\n
            \n
            def case2(): # Ð‘. temporary list and join\n
            s = []\n
            for i in range(10000):\n
            s.append(tmp)\n
            s = \"\".join(s)\n
            \n
            def case3(): # C. list expression and join\n
            return \"\".join([tmp for i in range(10000)])\n
            \n
            def case4(): # D. generator expression join\n
            return \"\".join(tmp for i in range(10000))\n
            \n
            for v in range(1,5):\n
            print (Timer(\"func()\",\"from __main__ import case%s as func\" % v).timeit(200))\n
    </string>
</resources>